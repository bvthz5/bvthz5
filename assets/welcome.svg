<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="800" height="500" viewBox="0 0 800 500" xmlns="http://www.w3.org/2000/svg">
    <rect width="100%" height="100%" fill="black" />

    <!-- Centered Welcome Text -->
    <g font-family="monospace" font-size="20" fill="lime" text-anchor="middle">
        <text x="50%" y="80" font-size="30">Welcome to my digital playground,</text>
    </g>

    <!-- Terminal Command Lines (Centered) -->
    <g font-family="monospace" font-size="20" fill="lime" text-anchor="middle">
        <text x="50%" y="150">unknown : $ pwd</text>
        <text x="50%" y="180">../home</text>
        <text x="50%" y="210">unknown : $ ls</text>
        <text x="50%" y="240">Binil</text>
        <text x="50%" y="270">unknown : $ cd Binil</text>
        <text x="50%" y="300">Binil : $ run start_login</text>
        
        <!-- Extra Line Space After the Last Command -->
        <text x="50%" y="330"></text>
    </g>

    <!-- Typing Animation Target -->
    <g id="typing-group" font-family="monospace" font-size="20" fill="lime" text-anchor="middle"></g>

    <!-- Progress Bar (Hidden Initially) -->
    <g id="progress-group" visibility="hidden">
        <rect x="150" y="470" width="500" height="10" fill="#333" rx="5" ry="5"/>
        <rect id="progress" x="150" y="470" width="0" height="10" fill="lime" rx="5" ry="5"/>
    </g>

    <!-- Animation Script -->
    <script><![CDATA[
        let textLines = [
            "Initializing system...",
            "Checking credentials...",
            "Verification successful...",
            "Access granted."
        ];

        let index = 0;
        let textGroup = document.getElementById('typing-group');
        let progressBar = document.getElementById('progress');
        let progressGroup = document.getElementById('progress-group');

        function typeWriter() {
            if (index < textLines.length) {
                let newText = document.createElementNS("http://www.w3.org/2000/svg", "text");
                newText.setAttribute("x", "50%");
                newText.setAttribute("y", 360 + (index * 30)); // Each text appears below the previous
                newText.setAttribute("font-family", "monospace");
                newText.setAttribute("font-size", "20");
                newText.setAttribute("fill", "lime");
                newText.setAttribute("text-anchor", "middle");
                newText.textContent = "> "; // Keeps '> ' in the same row
                
                textGroup.appendChild(newText);

                let subIndex = 0;
                let text = textLines[index];

                function typeCharacter() {
                    if (subIndex < text.length) {
                        newText.textContent += text[subIndex];
                        subIndex++;
                        setTimeout(typeCharacter, 100);
                    } else {
                        index++;
                        setTimeout(typeWriter, 500);
                    }
                }

                typeCharacter();
            } else {
                insertLineBreak();
            }
        }

        function insertLineBreak() {
            let breakText = document.createElementNS("http://www.w3.org/2000/svg", "text");
            breakText.setAttribute("x", "50%");
            breakText.setAttribute("y", 360 + (index * 30)); // New line below "Access granted."
            breakText.setAttribute("font-size", "20");
            breakText.setAttribute("fill", "lime");
            breakText.textContent = "";
            textGroup.appendChild(breakText);

            setTimeout(showProgressBar, 500);
        }

        function showProgressBar() {
            progressGroup.setAttribute("visibility", "visible");
            let width = 0;
            let interval = setInterval(() => {
                if (width >= 500) {
                    clearInterval(interval);
                    resetAnimation();
                } else {
                    width += 10;
                    progressBar.setAttribute('width', width);
                }
            }, 50);
        }

        function resetAnimation() {
            setTimeout(() => {
                textGroup.innerHTML = "";
                progressBar.setAttribute('width', '0');
                progressGroup.setAttribute("visibility", "hidden");
                index = 0;
                setTimeout(typeWriter, 1000);
            }, 2000);
        }

        setTimeout(typeWriter, 1000);
    ]]></script>
</svg>
